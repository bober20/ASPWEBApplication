@{
    ViewBag.Title = "Index";
    IEnumerable<Genre> genres = (ViewData["genres"] as IEnumerable<Genre>)!;

    var request = ViewContext.HttpContext.Request;
    var returnUrl = request.Path + request.QueryString.ToUriComponent();
}

@model ListModel<Show>


<!-- выбор категории -->
<div class="col-2 border-2">
    <ul class="nav ">
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle"
               data-bs-toggle="dropdown"
               href="#"
               role="button"
               aria-expanded="false">
                @ViewData["currentGenre"]
            </a>
            <ul class="dropdown-menu">
                <li>
                    <a class="dropdown-item"
                       asp-controller="shows"
                       asp-route-genre=@null>
                        Все
                    </a>
                </li>
                @foreach (var item in genres)
                {
                    <li>
                        <a class="dropdown-item"
                           asp-controller="shows"
                           asp-route-genre="@item.NormalizedName">
                            @item.Name
                        </a>
                    </li>
                }
            </ul>
        </li>
    </ul>
</div><!-- выбор категории -->

@* <partial name="Components/Show/_ShowListPartial" model="Model" /> *@
<div id="partial_container">
    @await Html.PartialAsync("Components/Show/_ShowListPartial", Model)
</div>

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="/js/site.js"></script>
}

@* <nav aria-label="Page navigation example"> *@
@*     <ul class="pagination"> *@
@*         @{ *@
@*             int prev = Model.CurrentPage == 1 ? 1 : Model.CurrentPage - 1; *@
@*             int next = Model.CurrentPage == Model.TotalPages ? Model.TotalPages : Model.CurrentPage + 1; *@
@*         } *@
@*         <li class="page-item"> *@
@*             <a asp-route-pageNo=@prev asp-route-genre=@ViewData["currentGenreNormalizedName"] class="page-link">Previous</a> *@
@*         </li> *@
@* *@
@*         @for (int i = 1; i <= Model.TotalPages; i++) *@
@*         { *@
@*             <li class="page-item"> *@
@*                 <a asp-route-pageNo=@i asp-route-genre=@ViewData["currentGenreNormalizedName"] class="page-link @(i == Model.CurrentPage ? "active" : "")">@i</a> *@
@*             </li> *@
@*         } *@
@*         <li class="page-item"> *@
@*             <a asp-route-pageNo=@next asp-route-genre=@ViewData["currentGenreNormalizedName"] class="page-link">Next</a> *@
@*         </li> *@
@*     </ul> *@
@* </nav> *@




@* <div class="container"> *@
@*     <div class="row mt-4"> <!-- Уменьшаем верхний отступ --> *@
@*         @foreach (var show in Model) *@
@*         { *@
@*             <div class="col-md-6 col-lg-4 mb-3"> <!-- Уменьшаем нижний отступ --> *@
@*                 <div class="card h-100 d-flex flex-column" style="transform: scale(0.7); margin: 0 auto;"> <!-- Уменьшаем карточки на 30% и убираем внешние отступы --> *@
@*                     <img class="card-img-top" src="@show.Image" alt="Card image" style="object-fit: cover;"> <!-- Убираем внутренние отступы у изображения --> *@
@*                     <div class="card-body d-flex flex-column" style="font-size: 1rem; padding: 0.5rem;"> <!-- Уменьшаем размер шрифта и внутренние отступы --> *@
@*                         <h5 class="card-title" style="font-size: 1.5rem;">@show.Name</h5> <!-- Уменьшаем размер шрифта заголовка --> *@
@*                         <p class="card-text" style="font-size: 1rem;">@show.Description</p> <!-- Уменьшаем размер шрифта описания --> *@
@*                         <div class="mt-auto"> *@
@*                             <a href="#" class="btn btn-primary" style="font-size: 0.8rem; padding: 0.25rem 0.5rem;">Add to cart</a> <!-- Уменьшаем размер шрифта и внутренние отступы кнопки --> *@
@*                         </div> *@
@*                     </div> *@
@*                 </div> *@
@*             </div> *@
@*         } *@
@*     </div> *@
@* </div> *@

